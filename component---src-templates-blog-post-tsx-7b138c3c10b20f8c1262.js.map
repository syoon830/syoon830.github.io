{"version":3,"sources":["webpack:///./src/components/utterances.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["Utterances","React","repo","containerRef","createRef","useEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","BlogPostTemplate","post","data","markdownRemark","title","frontmatter","date","content","html","className","dangerouslySetInnerHTML","__html","itemProp"],"mappings":"0IASMA,EAAyCC,QAAW,YAAgC,IAA7BC,EAA6B,EAA7BA,KACrDC,EAAeC,sBAuBrB,OArBAC,qBAAU,WACR,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAbM,gCAcNR,OACA,aAAc,WACdS,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQP,GAAYQ,SAAQ,YAAkB,IAAhBC,EAAgB,KAAXC,EAAW,KACnDb,EAAWc,aAAaF,EAAKC,MAE3BhB,GAAgBA,EAAakB,SAC/BlB,EAAakB,QAAQC,YAAYhB,KAElC,CAACH,EAAcD,IAEX,uBAAKqB,IAAKpB,OAGnBH,EAAWwB,YAAc,aAEVxB,QCGAyB,UAxBU,SAAC,GAAkC,IACpDC,EADoD,EAAhCC,KACRC,eACVC,EAAUH,EAAKI,YAAfD,MACAE,EAASL,EAAKI,YAAdC,KACFC,EAAUN,EAAKO,KACrB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,eACb,uBAAKA,UAAU,SAASL,GACxB,uBAAKK,UAAU,QAAQH,IAEzB,uBAAKG,UAAU,iBACb,2BACEC,wBAAyB,CAAEC,OAAQJ,GACnCK,SAAS,iBAGb,gBAAC,EAAD,CAAYnC,KAAK","file":"component---src-templates-blog-post-tsx-7b138c3c10b20f8c1262.js","sourcesContent":["import * as React from 'react';\r\nimport { createRef, useEffect } from 'react';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\nexport interface IUtterancesProps {\r\n  repo: string\r\n}\r\n\r\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo }: IUtterancesProps) => {\r\n  const containerRef = createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    const utterances = document.createElement('script');\r\n\r\n    const attributes = {\r\n      src,\r\n      repo,\r\n      'issue-term': 'pathname',\r\n      label: 'comment',\r\n      theme: 'github-light',\r\n      crossOrigin: 'anonymous',\r\n      async: 'true',\r\n    };\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value);\r\n    });\r\n    if (containerRef && containerRef.current) {\r\n      containerRef.current.appendChild(utterances);\r\n    }\r\n  }, [containerRef, repo]);\r\n\r\n  return <div ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;\r\n","import * as React from 'react';\r\nimport { graphql, PageProps } from 'gatsby';\r\n\r\nimport Layout from '../components/layout';\r\nimport { StyledPost } from '../style/Styles';\r\nimport Utterances from '../components/utterances';\r\n\r\ntype DataType = {\r\n  markdownRemark: {\r\n    frontmatter: {\r\n      title: string\r\n      date: string\r\n    }\r\n    html: string\r\n  }\r\n};\r\n\r\nconst BlogPostTemplate = ({ data }: PageProps<DataType>) => {\r\n  const post = data.markdownRemark;\r\n  const { title } = post.frontmatter;\r\n  const { date } = post.frontmatter;\r\n  const content = post.html;\r\n  return (\r\n    <Layout>\r\n      <StyledPost>\r\n        <div className=\"post-header\">\r\n          <div className=\"title\">{title}</div>\r\n          <div className=\"date\">{date}</div>\r\n        </div>\r\n        <div className=\"markdown-body\">\r\n          <section\r\n            dangerouslySetInnerHTML={{ __html: content }}\r\n            itemProp=\"articleBody\"\r\n          />\r\n        </div>\r\n        <Utterances repo=\"syoon830/blog\" />\r\n      </StyledPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY.MM.DD\")\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}