{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/optional-chaining-operator/","result":{"data":{"markdownRemark":{"html":"<p>ES11(ECMAScript2020)에서 도입된 연산자(<strong>?.)</strong> null 또는 undefined 체크시 유용하다.</p>\n<p>좌항의 피연사자가 <strong>null 또는 undefined인 경우 undefined를 반환</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> elem<span class=\"token operator\">?.</span>value<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>옵셔널 체이닝 연산자가가 도입되기 이전에는 논리 연산자 &#x26;&#x26;를 사용한 단축 평가를 통해 변수가 null 또는 undefined인지 확인했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javacript\"><pre class=\"language-javacript\"><code class=\"language-javacript\">var elem = null;\n\nvar value = elem &amp;&amp; elem.value;\n\nconsole.log(value); // null</code></pre></div>\n<p>좌항 피연산자가 false로 평가되는 Falsy 값(false, undefined, null, 0, -0, NaN, '')이 면 좌항 피연산자를 그대로 반환한다. 좌항 피연산자가 Falsy 값인 0이나 ''인 경우도 마찬가지다. 하지만 0이나 ''은 객체로 평가될 때도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> str <span class=\"token operator\">&amp;&amp;</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ''</span></code></pre></div>\n<p>하지만 옵셔널 체이닝 연산자는 좌항 피연산자가 false로 평가되는 Falsy 값이라도 null 또는 undefined가 아니면 우항의 프로퍼티 참조를 이어간다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> str<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<p>참조:</p>\n<p>모던자바스크립트 09_타입 변환과 단축 평가</p>","frontmatter":{"title":"옵셔널 체이닝 연산자 (Optional Chaining Operator)","date":"2021.02.07"}}},"pageContext":{"id":"2eede8d1-6dad-5f70-959b-77c246205fea"}},"staticQueryHashes":["3000541721","3159585216"]}